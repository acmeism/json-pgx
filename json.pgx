# A simple grammar for the simple JSON data language.
# See https://github.com/ingydotnet/pegex-json-pm for a Parser implementation
# that uses this grammar.

%grammar json
%version 0.0.1

json: map | seq

node: map | seq | scalar

map:
    / ~ <LCURLY> ~ /
    <pair>* % / ~ <COMMA> ~ /
    / ~ <RCURLY> ~ /

pair:
    string
    / ~ <COLON> ~ /
    node

seq:
    / ~ <LSQUARE> ~ /
    node* % / ~ <COMMA> ~ /
    / ~ <RSQUARE> ~ /

scalar:
    string |
    number |
    boolean |
    null

string: /                   # XXX Need to code this to spec.
    <DOUBLE>                # This works for simple cases,
        ((:                 # but doesn't handle all escaping yet.
            <BACK><BACK> |
            <BACK><DOUBLE> |
            [^ <DOUBLE> <BREAK> ]
        )*)
    <DOUBLE>
/

number: /(
    <DASH>?
    (: 0 | [1-9] <DIGIT>* )
    (: <DOT> <DIGIT>* )?
    (: [eE] [<DASH><PLUS>]? <DIGIT>+ )?
)/

boolean: true | false

true: /true/

false: /false/

null: /null/
